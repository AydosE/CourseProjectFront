import { useEffect, useState } from "react";
import { Link, useNavigate } from "react-router-dom";
import API from "../api/axios";
import { toast } from "sonner";

export default function AdminPanel() {
  const [users, setUsers] = useState([]);
  const [loading, setLoading] = useState(true);
  const navigate = useNavigate();

  useEffect(() => {
    fetchUsers();
  }, []);

  const fetchUsers = async () => {
    try {
      const res = await API.get("/admin/users");
      setUsers(res.data);
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:", err);
      toast.error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π");
    } finally {
      setLoading(false);
    }
  };

  const toggleBlock = async (id) => {
    try {
      await API.put(`/admin/${id}/block`);
      toast.success("–°—Ç–∞—Ç—É—Å –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –æ–±–Ω–æ–≤–ª—ë–Ω");
      fetchUsers();
    } catch {
      toast.error("–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å");
    }
  };

  const toggleRole = async (id) => {
    try {
      await API.put(`/admin/${id}/toggle-admin`);
      toast.success("–†–æ–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞");
      fetchUsers();
    } catch {
      toast.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–æ–ª–∏");
    }
  };

  const removeUser = async (id) => {
    const confirmed = window.confirm("–£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è?");
    if (!confirmed) return;
    try {
      await API.delete(`/admin/${id}`);
      toast.success("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª—ë–Ω");
      fetchUsers();
    } catch {
      toast.error("–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è");
    }
  };

  return (
    <div className="max-w-5xl mx-auto p-4">
      <h1 className="text-2xl font-bold mb-4">üëë –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</h1>

      {loading ? (
        <p className="text-center text-muted-foreground mt-10">–ó–∞–≥—Ä—É–∑–∫–∞...</p>
      ) : users.length === 0 ? (
        <p className="text-center text-gray-500 mt-10">
          –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        </p>
      ) : (
        <table className="w-full table-auto border-collapse text-sm">
          <thead>
            <tr className="bg-gray-100">
              <th className="p-2 border">–ò–º—è</th>
              <th className="p-2 border">Email</th>
              <th className="p-2 border">–†–æ–ª—å</th>
              <th className="p-2 border">–°—Ç–∞—Ç—É—Å</th>
              <th className="p-2 border">–î–µ–π—Å—Ç–≤–∏—è</th>
            </tr>
          </thead>
          <tbody>
            {users.map((u) => (
              <tr
                key={u.id}
                className="text-center hover:bg-gray-50 transition"
                onClick={() => navigate(`/users/${u.id}`)}
              >
                <td className="p-2 border">
                  <Link
                    to={`/users/${u.id}`}
                    className="text-blue-600 hover:underline"
                  >
                    {u.username}
                  </Link>
                </td>
                <td className="p-2 border">{u.email}</td>
                <td className="p-2 border">{u.role}</td>
                <td className="p-2 border">
                  {u.is_blocked ? "üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω" : "‚úÖ –ê–∫—Ç–∏–≤–µ–Ω"}
                </td>
                <td className="p-2 border space-x-2">
                  <button
                    onClick={() => toggleBlock(u.id)}
                    className="text-yellow-600 hover:underline"
                  >
                    {u.is_blocked ? "–†–∞–∑–±–ª–æ–∫." : "–ó–∞–±–ª–æ–∫–∏—Ä."}
                  </button>
                  <button
                    onClick={() => toggleRole(u.id)}
                    className="text-blue-600 hover:underline"
                  >
                    {u.role === "admin" ? "–°–Ω—è—Ç—å —Ä–æ–ª—å" : "–°–¥–µ–ª–∞—Ç—å –∞–¥–º–∏–Ω–æ–º"}
                  </button>
                  <button
                    onClick={() => removeUser(u.id)}
                    className="text-red-600 hover:underline"
                  >
                    –£–¥–∞–ª–∏—Ç—å
                  </button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      )}
    </div>
  );
}
